xio {

  testApplication = ${xio.applicationTemplate} {
    name = "test application"
    servers {
      testServer = ${xio.serverTemplate} {
        name = "test server"
        settings {
          bindPort = 0
        }
      }
    }
    settings {
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
    clients {
      testClient = ${xio.clientTemplate} {
        name = "test client"
      }
    }
  }

  exampleServer = ${xio.serverTemplate} {
    name = "example"
    settings {
      bindPort = 0
      useMessageLogger = true
    }
  }

  h1TestClient = ${xio.clientTemplate} {
    name = "test client"
    settings {
      tls {
        alpn {
          supportedProtocols = [
            "http/1.1"
          ]
        }
      }
    }
  }

  h2TestClient = ${xio.clientTemplate} {
    name = "test client"
    settings {
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
  }

  testServer = ${xio.serverTemplate} {
    name = "test"
    settings {
      bindPort = 0
      useMessageLogger = true
    }
  }

  exampleApplication = ${xio.applicationTemplate} {
    name = "example application"
    servers {
      exampleServer = ${xio.serverTemplate} {
        name = "example server"
        settings {
          bindPort = 0
        }
      }
    }
    settings {
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
  }

  proxyApplication = ${xio.applicationTemplate} {
    name = "proxy application"
    settings {
      zookeeper {
        cluster = ""
      }
    }
    servers {
      proxyServer = ${xio.serverTemplate} {
        name = "proxy server"
        settings {
          bindPort = 0
        }
      }
    }
  }

  servers = [
    ${xio.exampleServer}
  ]

  testHttpServer = ${xio.serverTemplate} {
    name = "testHttpServer"
    settings {
      bindPort = 0
      tls {
        useSsl = false
        logInsecureConfig = false
      }
    }
  }

  testGrpcServer = ${xio.serverTemplate} {
    name = "testGrpcServer"
    settings {
      bindPort = 0
      messageLoggerEnabled = true
    }
  }

  testHttpsServer = ${xio.serverTemplate} {
    name = "testHttpsServer"
    settings {
      bindPort = 0
    }
  }

  testEchoServer = ${xio.serverTemplate} {
    name = "testEchoServer"
    settings {
      bindPort = 0
      tls {
        useSsl = false
        logInsecureConfig = false
      }
    }
  }

  testTcpProxyServer = ${xio.serverTemplate} {
    name = "testTcpProxyServer"
    settings {
      bindPort = 0
      tls {
        useSsl = false
        logInsecureConfig = false
      }
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
  }

  h1ReverseProxy = ${xio.applicationTemplate} {
    name = "test application"
    settings {
      zookeeper {
        cluster = ""
      }
    }
    servers {
      main = ${xio.serverTemplate} {
        name = "test server"
        settings {
          bindPort = 0
          tls {
            alpn {
              supportedProtocols = [
                "http/1.1"
              ]
            }
          }
        }
      }
    }
    clients {
      main = ${xio.clientTemplate} {
        name = "test client"
      }
    }
  }

  h2ReverseProxy = ${xio.applicationTemplate} {
    name = "test application"
    settings {
      zookeeper {
        cluster = ""
      }
    }
    servers {
      main = ${xio.serverTemplate} {
        name = "test server"
        settings {
          bindPort = 0
          tls {
            alpn {
              supportedProtocols = [
                "h2"
              ]
            }
          }
        }
      }
    }
    clients {
      main = ${xio.clientTemplate} {
        name = "test client"
      }
    }
  }

  h1BackendServer = ${xio.serverTemplate} {
    name = "testHttpsServer"
    settings {
      bindPort = 0
      tls {
        alpn {
          supportedProtocols = [
            "http/1.1"
          ]
        }
      }
    }
  }

  h2BackendServer = ${xio.serverTemplate} {
    name = "testHttpsServer"
    settings {
      bindPort = 0
      tls {
        alpn {
          supportedProtocols = [
            "h2"
          ]
        }
      }
    }
  }

  baseClient = ${xio.clientTemplate} {
    name = "test client"
  }

  proxyRouteTemplate = ${xio.routeTemplate} {
    proxyHostPolicy = "UseRequestHeader"
    proxyHost = ""
    proxyPath = "/"
  }

  testProxyRoute = ${xio.routeTemplate} {
    name = proxyRoute
    path = "/"
    clients = [
      ${xio.baseClient} {
        name = "test client"
      }
    ]
    settings {
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
    proxyHostPolicy = "UseRequestHeader"
    proxyHost = ""
    proxyPath = "/"
  }

  edgeProxyApplication = ${xio.applicationTemplate} {
    name = "test application"
    settings {
      zookeeper {
        cluster = ""
      }
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
    }
    servers {
      main = ${xio.serverTemplate} {
        name = "test server"
        settings {
          bindPort = 0
        }
      }
    }
    users = [
      "validUser"
    ]
    permissions {
      validUser = [
        "canRequest"
      ]
    }
    routes = [
      ${xio.proxyRouteTemplate} {
        name = validPath
        path = "/valid-path/"
        permission = "canRequest"
        clients = [
          ${xio.baseClient} {
            name = "test valid-path client"
          }
        ]
      }
      ${xio.proxyRouteTemplate} {
        name = invalidAuthorization
        path = "/invalid-authorization/"
        permission = "cannotRequest"
        clients = [
          ${xio.baseClient} {
            name = "test invalid-authorization client"
          }
        ]
      }
      ${xio.proxyRouteTemplate} {
        name = invalidPath
        path = "/invalid-path/"
        permission = "canRequest"
        clients = [
          ${xio.baseClient} {
            name = "test invalid-path client"
          }
        ]
      }
      ${xio.proxyRouteTemplate} {
        name = invalidEndpoint
        path = "/invalid-endpoint/"
        permission = "canRequest"
        clients = [
          ${xio.baseClient} {
            name = "test invalid-endpoint client"
            # this is assuming that the daytime protocol is turned off
            remotePort = 13
          }
        ]
      }
    ]
  }

  invalidZipkinParameters = ${xio.clientTemplate} {
    name = invalidZipkinParameters
    settings {
      tracing {
        zipkinUrl = ""
        samplingRate = -0.50
      }
      tls {
        useSsl = false
        logInsecureConfig = false
      }
    }
  }

  validZipkinParameters  = ${xio.clientTemplate} {
    name = missingZipkinParameters
    settings {
      tracing {
        zipkinUrl = "http://127.0.0.1:9411/api/v1/spans"
        samplingRate = 0.50
      }
      tls {
        useSsl = false
        logInsecureConfig = false
      }
    }
  }
}
